#include <dt-bindings/zmk/bt.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>.
#include "solkatstice_pinctrl.dtsi"
#include "solkatstice.dtsi"
#include <dt-bindings/zmk/matrix_transform.h>
#include <behaviors/rgbled_widget.dtsi>

/ {
    chosen {
        zephyr,display = &oled;
    };

    default_transform: keymap_transform_0 {
      compatible = "zmk,matrix-transform";
      columns = <7>;
      rows = <7>;

      map = <
        RC(0,7)   RC(1,7)   RC(2,7)   RC(3,7)   RC(4,7)   RC(5,7)   RC(6,7)   RC(0,6)   RC(1,6)   RC(2,6)   RC(3,6)
        RC(0,5)   RC(1,5)   RC(2,5)   RC(3,5)   RC(4,5)   RC(6,5)   RC(7,5)   RC(0,4)   RC(1,4)   RC(2,4)   RC(3,4)
        RC(0,3)   RC(1,3)   RC(2,3)   RC(4,3)   RC(5,3)   RC(6,3)   RC(7,3)   RC(0,2)   RC(1,2)   RC(3,2)   RC(4,2)   
        RC(0,1)   RC(2,1)             RC(3,1)   RC(4,1)                                           RC(5,1)   RC(6,1)   RC(7,1) 
        >;
    };
    
    sideband_behaviors {
        compatible = "zmk,kscan-sideband-behaviors";
        auto-enable;
        kscan = <&kscan1>;

        ain0: ain0 {
            column = <0>;
            bindings = <&mLCTL>;
        };
        key1: key1 {
            column = <1>;
            bindings = <&mF13>;
        };
        key2: key2 {
            column = <2>;
            bindings = <&mF14>;
        };
        key3: key3 {
            column = <3>;
            bindings = <&mF15>;
        };
        key4: key4 {
            column = <4>;
            bindings = <&mF16>;
        };
        key5: key5 {
            column = <5>;
            bindings = <&mF17>;
        };
        key6: key6 {
            column = <6>;
            bindings = <&mF18>;
        };
    }; 

    aliases {
        led-red = &led0;
        led-green = &led1;
        led-blue = &led2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led0: led_0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;  // red LED, connected to P0.26
        };
        led1: led_1 {
            gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;  // green LED, connected to P0.30
        };
        led2: led_2 {
            gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;  // blue LED, connected to P0.06
        };
    };

    anin0: analog_input_0 {
        compatible = "zmk,analog-input";
        sampling-hz = <100>;
        y-ch {
            io-channels = <&adc 1>;
            mv-mid = <1300>;
            mv-min-max = <1600>;
            mv-deadzone = <500>;
            scale-multiplier = <1>;
            scale-divisor = <300>;
            #invert;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_Y>;
        };
        x-ch {
            io-channels = <&adc 0>;
            mv-mid = <1300>;
            mv-min-max = <1600>;
            mv-deadzone = <500>;
            scale-multiplier = <1>;
            scale-divisor = <300>;
            #invert;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_X>;
        };
    };
    
    analog_input_listener {
        status = "okay";
        compatible = "zmk,input-listener";
        device = <&anin0>;
        input-processors = <&zip_xy_to_scroll_mapper>;
    };

    trackball_listener {
        status = "okay";
        compatible = "zmk,input-listener";
        device = <&trackball>;
        input-processors = <&zip_temp_layer 3 1000>;
        scroll {
            layers = <2>;
            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 16>, <&zip_xy_to_scroll_mapper>;
        };
    };
}; 
