#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors/rgbled_widget.dtsi>

#define JIS 1
#define MOUSE 3
#define SCROLL 4
#define BT 5

&mt {
   flavor = "tap-preferred";
   quick_tap_ms = <125>;
   tapping_term_ms = <250>;
};
 
/ {
    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
        mLCTL: mLCTL {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LCT>;
        };
        mF13: mF13 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F13>;
        };
        mF14: mF14 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F14>;
        };
        mF15: mF15 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F15>;
        };
        mF16: mF16 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F16>;
        };
        mF17: mF17 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F17>;
        };
        mF18: mF18 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp F18>;
        };
    };

    behaviors {
        leader1: leader1 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            leftdown { sequence = <F13 F14 F15>; bindings = <&kp PG_UP>; };
            leftup   { sequence = <F15 F14 F13>; bindings = <&kp PG_DN>; };
            rightdown { sequence = <F16 F17 F18>; bindings = <&kp HOME>; };
            rightup   { sequence = <F18 F17 F16>; bindings = <&kp END>; };
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        toJIS: toJIS {
            compatible = "zmk,behavior-hold-tap";
            label = "toJIS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&tog>, <&kp>;
        };
        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp LS(N6)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LS(SQT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LS(N8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moMINUS: moMINUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LS(INT_RO)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moEQUAL: moEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moLBKT: moLBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp LS(RBRC)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moRBKT: moRBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp LS(BSLH)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moSEMI: moSEMI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moSQT: moSQT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp LS(N2)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moGRAVE: moGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC)>, <&kp LS(EQUAL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    }; 
 
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
//&kp CAPS        &kp BKSP
//&toJIS 1 TAB   
//&kp CAPS                  
//&kp LSHFT          &kp FSLH  &kp RSHFT    
//&mt LCTL ESC 

&kp Q     &kp W      &kp E      &kp R      &kp T        &kp Y     &kp U      &kp I      &kp O      &kp P
&kp A     &kp S      &kp D      &kp F      &kp G        &kp H     &kp J      &kp K      &kp L      &kp ENTER
&kp Z     &kp X      &kp C      &kp V      &kp B        &kp N     &kp M      &kp COMMA  &kp DOT    &kp UP
          &kp LGUI   &kp LALT   &lt 2 SPACE                                             &kp LEFT   &kp DOWN   &kp RIGHT
>;
       };

       function_layer {
           bindings = <
&kp PG_UP  &kp UP     &kp PG_DN  &kp HOME  &trans       &kp F1    &kp F2     &kp F3     &kp F4     &kp F5
&kp LEFT   &kp DOWN   &kp RIGHT  &kp END   &trans       &kp F6    &kp F7     &kp F8     &kp F9     &kp F10
&kp BKSP   &kp DEL    &trans     &trans    &trans       &kp F11   &kp F12    &trans     &trans     &trans 
           &kp LALT   &kp ENTER  &kp ENTER                                              &trans     &trans     &trans
>;
       };

       num_layer {
           bindings = <
&kp N1    &kp N2     &kp N3     &kp N4     &kp N5       &kp N6    &kp N7     &kp N8     &kp N9     &kp N0
&kp TAB   &trans     &trans     &trans     &trans       &trans    &trans     &kp MINUS  &kp EQUAL  &lt 5 BSLH
&kp ESC   &trans     &trans     &trans     &kp FSLH     &kp SEMI  &kp SQT    &kp LBKT   &kp RBKT   &trans
          &kp LALT   &kp ENTER  &kp ENTER                                               &trans     &trans     &trans
>;
       };


       mouse_layer {
           bindings = <
&trans    &trans     &trans     &trans     &trans       &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans       &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans       &trans    &mkp MB1   &mkp MB3   &mkp MB2   &trans
          &kp LALT   &kp ENTER  &kp ENTER                                               &trans     &trans     &trans
>;
       };

       scroll_layer {
           bindings = <
&trans    &trans     &trans     &trans     &trans       &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans       &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans       &trans    &mkp MB1   &mkp MB3   &mkp MB2   &trans
          &kp LALT   &kp ENTER  &kp ENTER                                               &trans     &trans     &trans
>;
       };

        bt_layer {
           bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR &bt BT_CLR_ALL &trans       &trans       &trans        &trans  &trans  &trans  &trans  &trans
&trans     &trans         &trans       &trans       &trans        &trans  &trans  &trans  &trans  &trans
          &kp LALT   &kp ENTER  &kp ENTER                                               &trans     &trans     &trans
>;
        };
    };
};

/ {
    aliases {
        led-red = &led0;
        led-green = &led1;
        led-blue = &led2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led0: led_0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;  // red LED, connected to P0.26
        };
        led1: led_1 {
            gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;  // green LED, connected to P0.30
        };
        led2: led_2 {
            gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;  // blue LED, connected to P0.06
        };
    };
};