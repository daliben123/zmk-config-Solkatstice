#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors/rgbled_widget.dtsi>

#define FUNCTION 1
#define NUM 2
#define MOUSE 3
#define SCROLL 4
#define BT 5

&mt {
   flavor = "tap-preferred";
   quick_tap_ms = <125>;
   tapping_term_ms = <250>;
};

/ {
    macros {
        mLCTL: mLCTL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTL>;
        };
        mF13: mF13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F13>;
        };
        mF14: mF14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F14>;
        };
        mF15: mF15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F15>;
        };
        mF16: mF16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F16>;
        };
        mF17: mF17 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F17>;
        };
        mF18: mF18 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F18>;
        };
    };
}; 

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPS         &kp Q            &kp W            &kp E            &kp R            &kp T            &kp Y            &kp U            &kp I            &kp O            &kp P  
&kp TAB          &kp A            &mt LEFT_ALT S   &mt LEFT_WIN D   &mt LCTRL F      &kp G            &mt RCTRL H      &mt RIGHT_WIN J  &mt RIGHT_ALT K  &kp L            &kp ENTER  
&mt LSHFT SPACE  &kp Z            &kp X            &kp C            &kp V            &kp B            &kp N            &kp M            &kp COMMA        &kp DOT          &kp UP  
                 &lt 2 LWIN       &kp LALT         &lt 1 SPACE      &lt 2 SPACE                                                         &kp LEFT         &kp DOWN         &kp RIGHT
            >;
        };

        function_layer {
            bindings = <
&kp GRAVE        &kp PG_UP        &kp UP           &kp PG_DN        &kp HOME         &trans           &kp F1           &kp F2           &kp F3           &kp F4            &kp F5  
&trans           &kp LEFT         &kp DOWN         &kp RIGHT        &kp END          &trans           &kp F6           &kp F7           &kp F8           &kp F9            &kp F10  
&kp ESCAPE       &kp BACKSPACE    &kp DEL          &trans           &trans           &trans           &kp F11          &kp F12          &trans           &trans            &trans  
                 &trans           &kp ENTER        &kp ENTER        &trans                                                              &trans           &trans            &trans
            >;
        };

        num_layer {
            bindings = <
&kp ESC           &kp N1          &kp N2           &kp N3           &kp N4           &kp N5           &kp N6           &kp N7           &kp N8           &kp N9            &kp N0  
&trans            &trans          &trans           &trans           &trans           &trans           &kp MINUS        &kp EQUAL        &kp LBKT         &kp RBKT          &lt 5 BSLH  
&trans            &trans          &trans           &trans           &trans           &trans           &trans           &kp FSLH         &kp SEMI         &kp SQT           &trans  
                  &trans          &kp ENTER        &kp ENTER        &trans                                                              &trans           &trans            &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &mkp MB1         &mkp MB3         &mkp MB2         &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans           &trans
            >;
        };

        scroll_layer {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &mkp MB1         &mkp MB3         &mkp MB2         &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans           &trans
            >;
        };

        bt_layer {
            bindings = <
&trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans           &trans           &trans           &trans           &trans  
&trans           &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
&trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans  
                 &trans           &trans           &trans           &trans                                                              &trans           &trans           &trans
            >;
        };
    };
};


/ {
    aliases {
        led-red = &led0;
        led-green = &led1;
        led-blue = &led2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led0: led_0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;  // red LED, connected to P0.26
        };
        led1: led_1 {
            gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;  // green LED, connected to P0.30
        };
        led2: led_2 {
            gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;  // blue LED, connected to P0.06
        };
    };
};
